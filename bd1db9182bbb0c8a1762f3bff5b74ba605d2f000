{
  "comments": [
    {
      "key": {
        "uuid": "5b27ab98_2606f662",
        "filename": "lib/jgit/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2015-12-02T14:32:00Z",
      "side": 1,
      "message": "how about JGIT_VERS?\n\nInitially I was thinking that this would be version of this plugin ;)",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 4
      },
      "revId": "bd1db9182bbb0c8a1762f3bff5b74ba605d2f000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b48d34e_2c06d362",
        "filename": "lib/jgit/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-12-02T14:50:45Z",
      "side": 1,
      "message": "\u003e how about JGIT_VERS?\n\nThe JGIT_ context is already assumed as we are inside /lib/jgit. In that sense VERS is enough. The same name is used in Gerrit core inside /lib/jgit.",
      "parentUuid": "5b27ab98_2606f662",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 4
      },
      "revId": "bd1db9182bbb0c8a1762f3bff5b74ba605d2f000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60fcbc2b_1eacedb0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfslocal/HttpModule.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2015-12-02T14:01:33Z",
      "side": 1,
      "message": "Question: wouldn\u0027t this expose LFS without the authentication?  I thought the servlet was already bound using the extension point, so this seems redundant...",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 46
      },
      "revId": "bd1db9182bbb0c8a1762f3bff5b74ba605d2f000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b27ab98_c60e027c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfslocal/HttpModule.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-12-02T14:10:18Z",
      "side": 1,
      "message": "This is a different servlet. There are two servlet in the game: LfsProtocolServlet and the LfsContentServlet.\n\nThe LfsProtocolServlet is bound in Gerrit core. It handles the LFS protocol and is protected the same way as git-over-http servlet.\n\nThe LfsContentServlet is just a dumb content storage plus it is able to tell the protocol servlet how to generate URL\u0027s for uploading large files.\n\nYes, the LfsContentServlet is not (yet) protected. This can be added in a followup change. There could be use cases where authorization on reading large files is not necessary... so this code is already useful for this scenario.\n\nWe don\u0027t want to, and cannot, impose particular authentication scheme on the blob storage by Gerrit core. It should be done by each concrete plugin.\nUploading/downloading of the large files will not necessarily be streamed through Gerrit or even through a plugin. In case of Amazon S3 the plugin would just generate a (temporary) link to the object in the S3 storage and the upload/download would go directly between the git-lfs client and Amazon S3 server.",
      "parentUuid": "60fcbc2b_1eacedb0",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 46
      },
      "revId": "bd1db9182bbb0c8a1762f3bff5b74ba605d2f000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b30efcd_67b9d2ec",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/lfslocal/HttpModule.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2015-12-02T14:23:47Z",
      "side": 1,
      "message": "OK.  Makes sense (I overlooked the LfsContentServlet vs. LfsProtocolServlet)!\n\nIn this case, maybe the answer is similar to the S3 case: generate a temporary token to the blob and \"authenticate\" to a particular user with that.  Not sure we can use the current Session backends for that, but it\u0027d be nice if we could... otherwise, it may require some extra side-storage (H2 or similar) to map the token to a username and expiration.  But that can definitely come later!",
      "parentUuid": "5b27ab98_c60e027c",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 46
      },
      "revId": "bd1db9182bbb0c8a1762f3bff5b74ba605d2f000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}